<UserControl x:Class="Client.MechanicControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:Client"
             xmlns:models="clr-namespace:Client.Models"
             xmlns:shared="clr-namespace:SharedKernel.Enums;assembly=SharedKernel"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800" Background="White">
    <UserControl.Resources>
        <models:JobViewModel x:Key="jobDataContext"></models:JobViewModel>
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="{x:Type Button}" x:Key="StartJob">
            <EventSetter Event="Click" Handler="StartJob"/>
        </Style>
        <Style TargetType="{x:Type Button}" x:Key="FinishJob">
            <EventSetter Event="Click" Handler="FinishJob"/>
        </Style>
        <!--<Style x:Key="StartStopButtonStyle" TargetType="Button">
            <Style.Triggers>
                <DataTrigger Binding="{Binding Status}" Value="{x:Static shared:JobStatus.InProgress}">
                    <Setter Property="Content" Value="Stop"></Setter>
                </DataTrigger>
                <DataTrigger Binding="{Binding Status}" Value="{x:Static shared:JobStatus.Done}">
                    <Setter Property="Visibility" Value="Hidden"></Setter>
                </DataTrigger>
                <DataTrigger Binding="{Binding Status}" Value="{x:Static shared:JobStatus.Pending}">
                    <Setter Property="Content" Value="Start"></Setter>
                </DataTrigger>
            </Style.Triggers>
        </Style>-->
        <SolidColorBrush x:Key="Button.Static.Background" Color="#FFFFFFFF"/>
        <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FFBEE6FD"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1"/>
        <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFC4E5F6"/>
        <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B"/>
        <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>
        <Style x:Key="ButtonTemplate" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" RenderTransformOrigin="0.5 0.5" CornerRadius="50" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>
                                <Setter Property="Button.Effect">
                                    <Setter.Value>
                                        <DropShadowEffect Color="Black" Direction="320" ShadowDepth="3" BlurRadius="5" Opacity="0.5" />
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter TargetName="border" Property="RenderTransform">
                                    <Setter.Value>
                                        <ScaleTransform ScaleX="0.9" ScaleY="0.9"/>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </UserControl.Resources>
    <Grid>
        <Grid.Background>
            <ImageBrush ImageSource="Resources\mechback.png" Stretch="Uniform" AlignmentX="Right" Opacity="0.4"></ImageBrush>
        </Grid.Background>
        <Grid.RowDefinitions>
            <RowDefinition Height="60px"></RowDefinition>
            <RowDefinition></RowDefinition>
        </Grid.RowDefinitions>
        <DockPanel>
            <Button Name="BackButton" Margin="5" DockPanel.Dock="Left" Grid.Row="0" HorizontalAlignment="left" VerticalAlignment="top" Width="50" Background="Transparent" Height="50" Style="{DynamicResource ButtonTemplate}" Click="BackButton_Click">
                <Image Source="Resources\back-icon.png" Margin="5"></Image>
            </Button>
            <StackPanel>
                <Border BorderBrush="Silver" HorizontalAlignment="Right" BorderThickness="0,0,0,2" Margin="0 8 8 0" Padding="30 0 0 0" >
                    <TextBlock HorizontalAlignment="Right" DockPanel.Dock="Right" FontWeight="Bold" FontSize="30" Text="Available Jobs"></TextBlock>
                </Border>
            </StackPanel>
        </DockPanel>
        <ListView Grid.Row="1" Name="AvailableJobs" Background="Transparent" ScrollViewer.HorizontalScrollBarVisibility="Disabled" DataContext="{StaticResource jobDataContext}" BorderThickness="0">
            <ListView.ContextMenu>
                <ContextMenu>
                    <MenuItem Header="Refresh" Click="RefreshList" >
                        <MenuItem.Icon>
                            <Image Source="Resources\Custom-Icon-Design-Flatastic-8-Refresh.ico" />
                        </MenuItem.Icon>
                    </MenuItem>
                </ContextMenu>
            </ListView.ContextMenu>
            <ListView.ItemContainerStyle>
                <Style TargetType="ListViewItem">
                    <Setter Property="HorizontalContentAlignment" Value="Stretch"></Setter>
                </Style>
            </ListView.ItemContainerStyle>
            <ListView.ItemTemplate>
                <DataTemplate>
                    <Border Name="TemplateBorder" BorderThickness="0" Padding="5">
                        <Grid HorizontalAlignment="Stretch">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition></ColumnDefinition>
                                <ColumnDefinition></ColumnDefinition>
                                <ColumnDefinition Width="2*"></ColumnDefinition>
                                <ColumnDefinition></ColumnDefinition>
                                <ColumnDefinition></ColumnDefinition>
                                <ColumnDefinition></ColumnDefinition>
                                <ColumnDefinition></ColumnDefinition>
                            </Grid.ColumnDefinitions>
                            <TextBlock Text="{Binding ClientName}" Margin="0 0 10 0" ToolTip="{Binding Path=Text, RelativeSource={RelativeSource self}}" Grid.Column="0" VerticalAlignment="Center" TextTrimming="CharacterEllipsis"></TextBlock>
                            <TextBlock Text="{Binding CarType}" Margin="0 0 10 0" ToolTip="{Binding Path=Text, RelativeSource={RelativeSource self}}" Grid.Column="1" VerticalAlignment="Center" TextTrimming="CharacterEllipsis" TextAlignment="Center"></TextBlock>
                            <ScrollViewer Grid.Column="2" Height="30" CanContentScroll="True" VerticalScrollBarVisibility="Hidden" >
                                <TextBlock Text="{Binding Description}" Grid.Column="2" VerticalAlignment="Center" TextWrapping="WrapWithOverflow">
                                    <TextBlock.ToolTip>
                                        <ToolTip Width="300" >
                                            <TextBlock TextWrapping="Wrap" Text="{Binding Description}"></TextBlock>
                                        </ToolTip>
                                    </TextBlock.ToolTip>
                                </TextBlock>
                            </ScrollViewer>
                            <TextBlock Text="{Binding LicencePlate}" Grid.Column="3" Margin="0 0 10 0" ToolTip="{Binding Path=Text, RelativeSource={RelativeSource self}}" VerticalAlignment="Center" TextTrimming="CharacterEllipsis"></TextBlock>
                            <TextBlock Text="{Binding JobStarted, StringFormat='yyyy-MM-dd HH:mm'}" VerticalAlignment="Center" Grid.Column="4" TextWrapping="Wrap" TextAlignment="Center">
                                <!--<TextBlock.Style>
                                    <Style TargetType="TextBlock">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding JobStarted}" Value="{x:Null}">
                                                <Setter Property="Text" Value="Not started yet"></Setter>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBlock.Style>-->
                            </TextBlock>
                            <TextBlock Text="{Binding Status}" Grid.Column="5" TextWrapping="Wrap" VerticalAlignment="Center" TextAlignment="Center"></TextBlock>
                            <Button Name="StartStopButton" Background="AliceBlue" FontWeight="DemiBold" BorderBrush="Transparent" Grid.Column="6" Height="30" Width="90"></Button>
                        </Grid>
                    </Border>
                    <DataTemplate.Triggers>
                        <DataTrigger Binding="{Binding Status}" Value="{x:Static shared:JobStatus.InProgress}">
                            <Setter TargetName="StartStopButton" Property="Content" Value="Finish job"></Setter>
                            <Setter TargetName="StartStopButton" Property="Style" Value="{DynamicResource FinishJob}"></Setter>
                            <Setter TargetName="TemplateBorder" Property="Background">
                                <Setter.Value>
                                    <SolidColorBrush Color="Yellow" Opacity="0.8" />
                                </Setter.Value>
                            </Setter>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Status}" Value="{x:Static shared:JobStatus.Done}">
                            <Setter TargetName="StartStopButton" Property="Visibility" Value="Hidden"></Setter>
                            <Setter TargetName="TemplateBorder" Property="Background">
                                <Setter.Value>
                                    <SolidColorBrush Color="#67EA00" Opacity="0.5" />
                                </Setter.Value>
                            </Setter>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Status}" Value="{x:Static shared:JobStatus.Pending}">
                            <Setter TargetName="StartStopButton" Property="Content" Value="Start job"></Setter>
                            <Setter TargetName="StartStopButton" Property="Style" Value="{DynamicResource StartJob}"></Setter>
                            <Setter TargetName="TemplateBorder" Property="Background">
                                <Setter.Value>
                                    <SolidColorBrush Color="Orange" Opacity="0.7" />
                                </Setter.Value>
                            </Setter>
                        </DataTrigger>
                    </DataTemplate.Triggers>
                </DataTemplate>
            </ListView.ItemTemplate>
        </ListView>
    </Grid>
</UserControl>
